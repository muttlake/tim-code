@model AdWorks.MVC.Models.PizzaViewModel
@* this is a strongly typed view, view is tied to a view model *@


@{

}

@*@using (@Html.BeginForm())
{
    @Html.TextBoxFor(m => m.Name)


    foreach (var item in pizzaView.Size)
    {
        @Html.RadioButtonFor(m => item, item.Text);
    }
}*@


<header class="col-md-12">
    <h3>Order</h3>
</header>
<div class="col-md-12">
    <h4>Name</h4>
    <div class="form-group">
        @*@Html.TextBoxFor(m => m.Name, "Person Name:")*@
    </div>
    <h4>Sizes</h4> <!-- this property will come back as a list -->
    <div class="form-group">
        @using (@Html.BeginForm())
        {
            @*@Html.LabelFor(m => m.Sizes.Small); //We were calling metadata of model
            @Html.RadioButtonFor(m => m.Sizes.Small, "Size");
            @Html.LabelFor(m => m.Sizes.Medium);
            @Html.RadioButtonFor(m => m.Sizes.Medium, "Size");
            @Html.LabelFor(m => m.Sizes.Large);
            @Html.RadioButtonFor(m => m.Sizes.Large, "Size");*@

            @*@foreach (var @size in Model.Sizes2)
            {
                <label>@size  Whats upppppp</label> //@Model needs a new Model
                <input type="radio" name="size" id="" value=@size />
            }*@
        }
    </div>
    <h4>Crusts</h4> <!-- this property will come back as a list -->
    @*<div class="form-group">
        @Html.RadioButtonFor(m => Model.Crust, "Crust")
    </div>*@
    <h4>Toppings</h4> <!-- this property will come back as a list -->
    <div class="form-group">
        @*@using (@Html.BeginForm())
        {
            Html.LabelFor(m => m.Toppings.Pineapple); //Html is grabbing definition of Pineapple
            Html.CheckBoxFor(m => m.Toppings.Pineapple, "ToppingList");
            Html.LabelFor(m => m.Toppings.Pepperoni);
            Html.CheckBoxFor(m => m.Toppings.Pepperoni, "ToppingList");
            Html.LabelFor(m => m.Toppings.Vegan);
            Html.CheckBoxFor(m => m.Toppings.Vegan, "ToppingList");*@

        <!-- This Model below must be an instance -->
        @*<label>@Model.Sizes.Small</label> //@Model needs a new Model
        <input type="radio" name="Size" id="" value="@Model.Sizes.Small" />
        <label>@Model.Sizes.Medium</label>
        <input type="radio" name="Size" id="" value="@Model.Sizes.Medium" />
        <label>@Model.Sizes.Large</label>
        <input type="radio" name="Size" id="" value="@Model.Sizes.Large" />*@

        @*//foreach(var item in List)
        //@item*@
        <label></label>
        @*<input asp-for="size" type="radio" value="Sizes.Small"/>*@

        <form asp-controller="Pizza" method="post">
            <h4>Sizes</h4> <!-- this property will come back as a list -->
            <div class="form-group">
                @foreach (var @size in Model.Sizes)
                {
                    <label>@size</label> //@Model needs a new Model
                    <input asp-for="Size" type="radio" name="size" id="" value=@size />
                }
            </div>
            <h4>Crusts</h4> <!-- this property will come back as a list -->
            <div class="form-group">
                @foreach (var @crust in Model.Crusts)
                {
                    <label>@crust</label> //@Model needs a new Model
                    <input asp-for="Crust" type="radio" name="crust" id="" value=@crust />
                }
            </div>
            @*<input asp-for="Size" type="radio" name="size" id="" value=@size />*@
            <button type="submit">Submit your Order</button>
        </form>
        @*}*@
    </div>
</div>


